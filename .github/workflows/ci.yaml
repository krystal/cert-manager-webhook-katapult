name: CI
on: push
jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      version: ${{ steps.release-please.outputs.version }}
    steps:
      - uses: krystal/release-please-manifest-action@v1
        id: release-please
        with:
          app-id: ${{ vars.RELEASE_PLEASE_GITHUB_APP_ID }}
          private-key: ${{ secrets.RELEASE_PLEASE_GITHUB_APP_PRIVATE_KEY }}

  publish-image:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/krystal/cert-manager-webhook-katapult:${{ needs.release-please.outputs.version }}
  
  publish-chart:
    name: Publish Helm Chart
    needs: [release-please, publish-image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: cert-manager-webhook-katapult
          repository: krystal/charts
          tag: ${{ needs.release-please.outputs.version }}
          path: chart
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
